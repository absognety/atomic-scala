[0m[[0m[33mwarn[0m] [0m[0m/home/vikas/atomic-scala/src/main/scala/ErrorHandlingWithExceptions/problem05.scala:21:12: This catches all Throwables. If this is really intended, use `case _ : Throwable` to clear this warning.[0m
[0m[[0m[33mwarn[0m] [0m[0m      case _ => "unknown exception"[0m
[0m[[0m[33mwarn[0m] [0m[0m           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/vikas/atomic-scala/src/main/scala/Testing/problem04.scala:10:20: comparing values of types Int and String using `==` will always yield false[0m
[0m[[0m[33mwarn[0m] [0m[0m    assert(myValue2==myValue5,"invalid comparison between data types")[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/vikas/atomic-scala/src/main/scala/Sequences/Solution04.scala:8:9: Generated class Sequences.Solution04$Friend differs only in case from Sequences.Solution04$friend.[0m
[0m[[0m[33mwarn[0m] [0m[0m  Such classes will overwrite one another on case-insensitive filesystems.[0m
[0m[[0m[33mwarn[0m] [0m[0m  class Friend(val firstName:String,val lastName:String,override val emailaddress:String = "") extends friend(firstName,lastName) {[0m
[0m[[0m[33mwarn[0m] [0m[0m        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/vikas/atomic-scala/src/main/scala/UsingTraits/problem04.scala:15:9: Generated class UsingTraits.problem04$artPeriod differs only in case from UsingTraits.problem04$ArtPeriod.[0m
[0m[[0m[33mwarn[0m] [0m[0m  Such classes will overwrite one another on case-insensitive filesystems.[0m
[0m[[0m[33mwarn[0m] [0m[0m  class artPeriod extends ArtPeriod[0m
[0m[[0m[33mwarn[0m] [0m[0m        ^[0m
[0m[[0m[33mwarn[0m] [0m[0mthere were 12 deprecation warnings (since 2.13.0); re-run with -deprecation for details[0m
[0m[[0m[33mwarn[0m] [0m[0m5 warnings found[0m
