[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution04.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution04.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /home/vikas/atomic-scala/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 538f050e for Scala compiler version 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vikas/java/jdk1.8.0_231/jre/lib/resources.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/rt.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/sunrsasign.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jsse.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jce.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/charsets.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jfr.jar:/home/vikas/java/jdk1.8.0_231/jre/classes:/home/vikas/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.13.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vikas/atomic-scala/target/scala-2.13/classes:/home/vikas/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.4.1.jar:/home/vikas/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.13.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.517500751 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ListsAndRecursion.driver...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ListsAndRecursion.driver)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ListsAndRecursion.driver)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ListsAndRecursion.driver,ModifiedNames(changes = UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(driver,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The ListsAndRecursion.driver has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(main,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(driver,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ListsAndRecursion.driver)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ListsAndRecursion.recursiveFreq...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ListsAndRecursion.recursiveFreq)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ListsAndRecursion.recursiveFreq)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ListsAndRecursion.recursiveFreq,ModifiedNames(changes = UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(recursiveFreq,[Default]), UsedName(eq,[Default]), UsedName(calcFreq,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ListsAndRecursion;recursiveFreq;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The ListsAndRecursion.recursiveFreq has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(recursiveFreq,[Default]), UsedName(eq,[Default]), UsedName(calcFreq,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ListsAndRecursion;recursiveFreq;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ListsAndRecursion.recursiveFreq)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
