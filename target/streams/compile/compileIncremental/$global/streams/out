[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/vikas/atomic-scala/src/main/scala/Sets/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/Sets/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/Sets/Solution03.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution02$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Mocha.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution04$TakeHome$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$test.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04$Contact.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution04$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$toGo.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Coffee.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Here$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/AutomaticStringConversion/Solution03$Cycle$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution03.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$NoMilk$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Caf$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/AutomaticStringConversion/Solution03.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Coffee1$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$ToGo$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution01$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Choc.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution03$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution02$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/AutomaticStringConversion/Solution03$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Latte.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$NoFlavor$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$shots.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Skim$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$milk.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution01$Person.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Skim$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/AutomaticStringConversion/Solution03$Cycle$2$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Double$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution04$TakeHome.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution02.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$ToGo$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Coffee1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Caf$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution02$recursion2.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04$friend.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Single$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution04.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution03$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution02.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04$Friend$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Double$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution03$Mocha$choc.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution01$recursion.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$HalfCaf$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution01$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution03.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/Solution01.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Caf$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution01.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/ListsAndRecursion/reimplement.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Coffee$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$decaf.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Here$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution04$Container$.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Double$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution04$Friend.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02$Skim$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$syrup.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Single$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution01$Choc$1.class, /home/vikas/atomic-scala/target/scala-2.13/classes/BuildingSystemsWithTraits/Solution02.class, /home/vikas/atomic-scala/target/scala-2.13/classes/Sequences/Solution01$Person$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/vikas/atomic-scala/src/main/scala/Sequences/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/AutomaticStringConversion/Solution03.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/vikas/atomic-scala/src/main/scala/Sets/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/Sets/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution04.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/Sequences/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/CombiningSequencesWithZip/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/ListsAndRecursion/Solution01.scala, /home/vikas/atomic-scala/src/main/scala/Sets/Solution03.scala, /home/vikas/atomic-scala/src/main/scala/BuildingSystemsWithTraits/Solution02.scala, /home/vikas/atomic-scala/src/main/scala/AutomaticStringConversion/Solution03.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 19 Scala sources to /home/vikas/atomic-scala/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 371d4502 for Scala compiler version 2.13.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vikas/java/jdk1.8.0_231/jre/lib/resources.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/rt.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/sunrsasign.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jsse.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jce.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/charsets.jar:/home/vikas/java/jdk1.8.0_231/jre/lib/jfr.jar:/home/vikas/java/jdk1.8.0_231/jre/classes:/home/vikas/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.13.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vikas/atomic-scala/target/scala-2.13/classes:/home/vikas/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.4.1.jar:/home/vikas/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.13.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 5.206356649 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Sets.Solution01...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Sets.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Sets.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Sets.Solution02: Set(UsedName(percentMeat,[Default]), UsedName(meats,[Default]), UsedName(Solution01,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Sets.Solution01,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(fruits,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(vegetables,[Default]), UsedName(percentMeat,[Default]), UsedName(groceryCart,[Default]), UsedName(percentOther,[Default]), UsedName(percentVeggies,[Default]), UsedName(meats,[Default]), UsedName(notify,[Default]), UsedName(percentFruit,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Solution01,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 2 classes due to The Sets.Solution01 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(fruits,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(vegetables,[Default]), UsedName(percentMeat,[Default]), UsedName(groceryCart,[Default]), UsedName(percentOther,[Default]), UsedName(percentVeggies,[Default]), UsedName(meats,[Default]), UsedName(notify,[Default]), UsedName(percentFruit,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Solution01,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Sets.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Sets.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Sets.Solution03...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Sets.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Sets.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Sets.Solution03,ModifiedNames(changes = UsedName(box1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(basement,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(attic,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(Solution03,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(house,[Default]), UsedName(box2,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(box3,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The Sets.Solution03 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(box1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(basement,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(attic,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(Solution03,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(house,[Default]), UsedName(box2,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(box3,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Sets.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CombiningSequencesWithZip.Solution01...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CombiningSequencesWithZip.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CombiningSequencesWithZip.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CombiningSequencesWithZip.Solution01,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Solution01,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The CombiningSequencesWithZip.Solution01 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Solution01,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CombiningSequencesWithZip.Solution01)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CombiningSequencesWithZip.Solution04...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CombiningSequencesWithZip.Solution04)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CombiningSequencesWithZip.Solution04)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CombiningSequencesWithZip.Solution04,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName(number2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(number,[Default]), UsedName(Solution04,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The CombiningSequencesWithZip.Solution04 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName(number2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(number,[Default]), UsedName(Solution04,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CombiningSequencesWithZip.Solution04)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Sets.Solution02...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Sets.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Sets.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Sets.Solution02,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(percentProtein,[Default]), UsedName(percentVegetarian,[Default]), UsedName(Solution02,[Default]), UsedName(main,[Default]), UsedName(proteins,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(groceryCart2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(vegetarian,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The Sets.Solution02 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(percentProtein,[Default]), UsedName(percentVegetarian,[Default]), UsedName(Solution02,[Default]), UsedName(main,[Default]), UsedName(proteins,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(groceryCart2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(vegetarian,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Sets.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CombiningSequencesWithZip.zipUse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CombiningSequencesWithZip.zipUse)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CombiningSequencesWithZip.zipUse)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CombiningSequencesWithZip.Solution02: Set(UsedName(zipUse,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CombiningSequencesWithZip.zipUse,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pairs,[Default]), UsedName(zipUse,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(group1,[Default]), UsedName(people,[Default]), UsedName(toString,[Default]), UsedName(group2,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 2 classes due to The CombiningSequencesWithZip.zipUse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pairs,[Default]), UsedName(zipUse,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(group1,[Default]), UsedName(people,[Default]), UsedName(toString,[Default]), UsedName(group2,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CombiningSequencesWithZip.zipUse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(CombiningSequencesWithZip.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CombiningSequencesWithZip.Solution03...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CombiningSequencesWithZip.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CombiningSequencesWithZip.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CombiningSequencesWithZip.Solution03,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(people2,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(Solution03,[Default]), UsedName(group22,[Default]), UsedName(getClass,[Default]), UsedName(pairs2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(group12,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The CombiningSequencesWithZip.Solution03 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(people2,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(Solution03,[Default]), UsedName(group22,[Default]), UsedName(getClass,[Default]), UsedName(pairs2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(group12,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CombiningSequencesWithZip.Solution03)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CombiningSequencesWithZip.Solution02...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CombiningSequencesWithZip.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CombiningSequencesWithZip.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CombiningSequencesWithZip.Solution02,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(people1,[Default]), UsedName(group11,[Default]), UsedName(Solution02,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(group21,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The CombiningSequencesWithZip.Solution02 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(people1,[Default]), UsedName(group11,[Default]), UsedName(Solution02,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(group21,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CombiningSequencesWithZip.Solution02)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
